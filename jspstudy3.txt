서버어플리케이션

1. Webserver
2. Web Application Server

Context
물리적으론 하나의 사이트

하지만 디렉토리를 나눠서
별개로 만드는 방법

servlet은 Class에 Extend한다.

servlet 은 jdk라이브러리가 아니다.

javac -cp C:\jsp2\Tomcat9.0\lib\servlet-api.jar nana.java

client에서는 서버쪽의 web-inf를 접근불가능하다.
사용자는 서블릿을 가르키는 명령어를 넘긴다.
서버는 그거에 맞는서블릿을 넘긴다.

버퍼를 채워야 윈도우를 보낸다.
8KB

자바에선 다국어다 printwriter
한국어도 다국어

webContent 가 홈디렉토리

클래스에서 메타데이터로 언노테이션 정보를
사용할수있다.

서블릿 3.0에서는
xml 및 어노테이션 다된다.
어노테이션 서블릿 파일 ex)@WebServlet("/calac")

나중에 기업형 프로그램을 짤때도
분배를 해야하기때문에
어노테이션을 해야한다.

코드에 따라서 익스플로러 페이지때랑
나오는게 다르다.

문서에 어떠한 형식으로 보내줄건지
할수있다.

setcharacterencoding 코드 인코딩
setContentType 페이지 디코딩

웹서버 tomcat은 
ISO-8859-1 로 인식
얘는 1바이트로쪼개서 디코딩

톰캣서버에서 서버 설정을바꿀수 있지만
바꾸진 않는다.

필터 설정은 Web.xml에서
Xml방식 또는 어노테이션 둘다된다.

개발자 도구에서 network에서 
데이터 이동을 볼수있다.

input type=submit에선 value값이 넘어간다.

여러가지 입력란의 name을 같게
해주면 배열로 보낸다.
String[] num = request.getParameterValues

상태유지 도구
application
session
cookie

어플리케이션 객체  //어플리케이션 전역에서 사용가능
ServletContext는 어플리케이션 저장소
setAttribute메소드 데이터 저장

session 객체 // 세션 범주에서만 사용할수있다.(현재 접속한 사용자)
사용자 별로 공간이 달라질수 있다.

서버가 사용자를 식별하는 방법

크롬창을 여러개 띄워도
하나의 프로세스 여러개의 Thread로 인식한다.!!

------------------------------------
!!!웹서버가 현재 사용자(session)을 구분하는방식!!!!

서버쪽에서는 새로운사용자를위한 공간은없다.
세션은 사용자가 세션아이디를 가지고있어야
공간에 저장할수 있다.
처음에는 어플리케이션에 저장하고
사용후에 서버가 세션아이디를 배부한다.(get방식?)

브라우저가 달라지면 처음에 세션아이디(SID)를 없이
요청한다.
세션아이디는 WAS에의해 발급되어진다.

툴을 사용해서 세션아이디를 동일하게 요청하면
같은 사용자로 인식되어진다. 보안문제

session
서버가 정보를 가지고있다.
void invalidate() 세션 사용객체 바로 해제
void setMaxInactiveInterval(int interval)
시간 수동 설정가능
세션 정보 유지시간 30분
------------------------------------------------------
Cookie사용방법

쿠키는 배열로 보낼수 있다.
Cookie
클라이언트가 정보를 가지고 있다.
쿠키는 문자열로만 보낼 수 있다.

-----------------------------------------------------
쿠키의 path
쿠키는 서블릿마다 다르게 보내야한다.

------------------------------------------------
Cookie maxage

maxage를 설정안하면 쿠키의 생성주기가
브라우저를 따라간다.

cookie.setmaxage 메소드

------------------------------------------------
Application/Session/Cookie의 차이점

Application 서버쪽 자원
Was의 생명주기를 따라간다.
Was서버의 메모리

Session 세션과 생명주기 같이
특정사용자
Was서버의 메모리

Cookie Web브라우저별 지정한 path범주공간
웹브라우저에 전달한 시간부터 만료 시간까지
웹브라우저 메모리사용

보관기간이 길수록 쿠키를 사용한다.
사용자의 세션아이디는 쿠키로 이동된다.

웹브라우저가 종료되면 사용자 세션아이디가.
바뀔수 있다.

----------------------------------------------------
서버에서 페이지 전환해주기!!!!!
redirect

response.sendredirect("x.html")
-------------------------------------------------
동적인 페이지(서버 페이지)의 필요성

요청이 있을때마다 만들어지는 문서가
있어야 한다.

----------------------------------------------------
동적페이지 서블릿으로 직접 만들기

스크립트를 실행하는 엔진이 존재

------------------------------------------------------
쿠키를 지우고싶을때는
쿠키의 변수에 = ""
expCookie.setMaxAge(0);를 해야 바로 지워진다.

-----------------------------------------------------
쿠키패스는 하나만 설정 된다.